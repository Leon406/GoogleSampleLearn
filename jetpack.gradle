ext {
//--------------------------------------------  IDE ------------------------------------------------
    kotlin_version = '1.3.41'

    //---------------------------------------------Rx --------------------------------------------------
    reactivePackage = 'io.reactivex.rxjava2'
    //rx
    rxAndroidVersion = '2.1.1'
    rxJavaVersion = '2.2.10'
    rxLifeCycleVersion = '2.2.1'
    rxBindVersion = '3.0.0'
    rxPermissionVersion = '0.9.4'

    rx = [
            android     : buildDepend(reactivePackage, 'rxandroid', rxAndroidVersion),
            java        : buildDepend(reactivePackage, 'rxjava', rxJavaVersion),
            life        : "com.trello.rxlifecycle2:rxlifecycle:$rxLifeCycleVersion",
            lifeAndroid : "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifeCycleVersion",
            lifeCmp     : "com.trello.rxlifecycle2:rxlifecycle-components:$rxLifeCycleVersion",
            permission  : "com.tbruyelle.rxpermissions2:rxpermissions:${rxPermissionVersion}@aar",
            binding     : "com.jakewharton.rxbinding2:rxbinding:$rxBindVersion",
            bindSup     : "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBindVersion",
            bindCompat  : "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBindVersion",
            bindDesign  : "com.jakewharton.rxbinding2:rxbinding-design:$rxBindVersion",
            bindRecycler: "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxBindVersion",
            bindLean    : "com.jakewharton.rxbinding2:rxbinding-leanback-v17:$rxBindVersion"

    ]

    daggerVer = "2.24"
    dagger = [
            runtime : "com.google.dagger:dagger:$daggerVer",
            android : "com.google.dagger:dagger-android:$daggerVer",
            support : "com.google.dagger:dagger-android-support:$daggerVer",
            compiler: "com.google.dagger:dagger-compiler:$daggerVer",
            apt     : "com.google.dagger:dagger-android-processor:$daggerVer"
    ]

//----------------------------------------  Architecture -------------------------------------------
//****************************************  lifecycle   ********************************************
    lifecycleVer = "1.1.1"

    lifecyclePak = "android.arch.lifecycle"

    lifecycle = [
            extensions   : buildDepend(lifecyclePak, 'extensions', lifecycleVer),
            apt          : buildDepend(lifecyclePak, 'compiler', lifecycleVer),
            //alternatively
            runtime      : buildDepend(lifecyclePak, 'runtime', lifecycleVer),
            livedata     : buildDepend(lifecyclePak, 'livedata', lifecycleVer),
            viewmodel    : buildDepend(lifecyclePak, 'viewmodel', lifecycleVer),
            viewmodel_ktx: buildDepend(lifecyclePak, 'viewmodel-ktx', lifecycleVer),
            //optional
            rx           : buildDepend(lifecyclePak, 'reactivestreams', lifecycleVer),
            rx_ktx       : buildDepend(lifecyclePak, 'reactivestreams-ktx', lifecycleVer),
            java8        : buildDepend(lifecyclePak, 'common-java8', lifecycleVer),
            test         : buildDepend('android.arch.core', 'core-testing', lifecycleVer)

    ]

//****************************************     Room    *********************************************
    roomVer = "1.1.1"

    roomPak = "android.arch.persistence.room"

    room = [
            runtime: buildDepend(roomPak, 'runtime', roomVer),
            apt    : buildDepend(roomPak, 'compiler', roomVer),
            //optional
            rx     : buildDepend(roomPak, 'rxjava2', roomVer),
            guava  : buildDepend(roomPak, 'guava', roomVer),

            test   : buildDepend(roomPak, 'testing', roomVer)

    ]

//****************************************     Paging    *********************************************
    pagingVer = "1.0.1"
    pagingPak = "android.arch.paging"
    paging = [
            runtime: buildDepend(pagingPak, 'runtime', pagingVer),
            ktx    : buildDepend(pagingPak, 'paging-runtime-ktx', pagingVer),
            //optional
            rx     : buildDepend(pagingPak, 'rxjava2', pagingVer),
            // alternatively - without Android dependencies for testing
            test   : buildDepend(pagingPak, 'common', pagingVer)
    ]

//*************************************     Navigation    ******************************************
    navigationVer = "1.0.0"


    navigationPak = "android.arch.navigation"
//For Safe args
    navigationClasspath = "android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0-alpha02"
    navigationPlug = "androidx.navigation.safeargs"

    navigation = [
            fragment    : buildDepend(navigationPak, 'navigation-fragment', navigationVer),
            fragment_ktx: buildDepend(navigationPak, 'navigation-fragment-ktx', navigationVer),
            ui          : buildDepend(navigationPak, 'navigation-ui', navigationVer),
            ui_ktx      : buildDepend(navigationPak, 'navigation-ui-ktx', navigationVer),
            //optional
            test        : buildDepend(navigationPak, 'navigation-testing', navigationVer),
            test_ktx    : buildDepend(navigationPak, 'navigation-testing-ktx', navigationVer)
    ]

//****************************************     WorkManager    **************************************
    workVer = "1.0.0"

    workPak = "android.arch.work"
    work = [
            runtime : buildDepend(workPak, 'work-runtime', workVer),
            //optional
            firebase: buildDepend(workPak, 'work-firebase', workVer),

            test    : buildDepend(workPak, 'work-testing', workVer)
    ]

//----------------------------------------  Foundation -------------------------------------------
    supVer = "28.0.0"

    supPak = "com.android.support"

    sup = [

            compat       : buildDepend(supPak, 'support-compat', supVer),

            appcompat    : buildDepend(supPak, 'appcompat-v7', supVer),
            design       : buildDepend(supPak, 'design', supVer),
            cardview     : buildDepend(supPak, 'cardview-v7', supVer),
            recyclerview : buildDepend(supPak, 'recyclerview-v7', supVer),
            palette      : buildDepend(supPak, 'palette-v7', supVer),

            customtabs   : buildDepend(supPak, 'customtabs', supVer),
            exifinterface: buildDepend(supPak, 'exifinterface', supVer),
            multidex     : buildDepend(supPak, 'multidex', "1.0.2")

    ]
}


static String buildDepend(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}

def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.aliyun.com/repository/public' }
    handler.mavenCentral()
    handler.maven { url 'https://www.jitpack.io' }
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.mavenLocal()
//    private maven
    handler.maven { url 'http://127.0.0.1:8081/repository/maven-public/' }
    handler.maven {
        url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2'
    }
}

ext.addRepos = this.&addRepos